# Generated by Django 4.0.3 on 2022-04-17 13:17

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import elearning.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('type', models.CharField(choices=[('Student', 'student'), ('Teacher', 'teacher'), ('Admin', 'admin')], max_length=200, null=True)),
                ('image', models.URLField(default='https://via.placeholder.com/150x150/FFFF00/000000/?text=TEACHER+IMG', null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.AutoField(default=elearning.models.from_364, primary_key=True, serialize=False)),
                ('course_title', models.CharField(max_length=100)),
                ('describe', models.TextField(blank=True, max_length=700)),
                ('image_url', models.CharField(blank=True, default='', max_length=200)),
                ('video_url', models.CharField(blank=True, default='', max_length=200)),
                ('best_seller', models.BooleanField(default=False)),
                ('start_price', models.FloatField(default=0)),
                ('video_lenght', models.FloatField(default=0)),
                ('price', models.FloatField(default=0)),
                ('categorys', models.ManyToManyField(blank=True, to='elearning.category')),
                ('teacher', models.ManyToManyField(blank=True, related_name='mycourses', to=settings.AUTH_USER_MODEL)),
                ('teachers', models.ManyToManyField(blank=True, related_name='assist_in', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('lecture_id', models.AutoField(primary_key=True, serialize=False)),
                ('lecture_title', models.CharField(max_length=100)),
                ('video_url', models.CharField(blank=True, default='', max_length=200)),
                ('image_url', models.CharField(blank=True, default='', max_length=200)),
                ('slide_url', models.CharField(blank=True, default='', max_length=200)),
                ('doc_url', models.CharField(blank=True, max_length=200)),
                ('course_id', models.ManyToManyField(related_name='lectures', to='elearning.course')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_title', models.CharField(max_length=100)),
                ('video_url', models.CharField(blank=True, default='', max_length=200)),
                ('image_url', models.CharField(blank=True, default='', max_length=200)),
                ('slide_url', models.CharField(blank=True, default='', max_length=200)),
                ('doc_url', models.CharField(blank=True, default='', max_length=200)),
                ('course_id', models.ManyToManyField(related_name='lessons', to='elearning.course')),
                ('lecture_id', models.ManyToManyField(related_name='lesson', to='elearning.lecture')),
            ],
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_num', models.IntegerField()),
                ('question', models.CharField(max_length=300)),
                ('option1', models.CharField(max_length=200)),
                ('option2', models.CharField(blank=True, max_length=200)),
                ('option3', models.CharField(blank=True, max_length=200)),
                ('option4', models.CharField(blank=True, max_length=200)),
                ('answer', models.CharField(blank=True, max_length=200)),
                ('course_id', models.ManyToManyField(to='elearning.course')),
                ('lecture_id', models.ManyToManyField(to='elearning.lecture')),
                ('lesson_id', models.ManyToManyField(blank=True, to='elearning.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='Final_submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(max_length=1000)),
                ('grade', models.CharField(max_length=2)),
                ('final_id', models.ManyToManyField(to='elearning.assignment')),
                ('user_id', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Final_project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=1000)),
                ('course_id', models.ManyToManyField(to='elearning.course')),
            ],
        ),
        migrations.CreateModel(
            name='Enroll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('free', 'free'), ('visa', 'visa'), ('paypal', 'paypal')], max_length=50)),
                ('rate_scale', models.FloatField(blank=True, max_length=5, null=True)),
                ('review', models.TextField(blank=True, max_length=300, null=True)),
                ('complete_status', models.BooleanField(default=False, null=True)),
                ('course_id', models.ManyToManyField(related_name='students', to='elearning.course')),
                ('username', models.ManyToManyField(related_name='mylessons', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Discussion_board_for_lecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(max_length=300)),
                ('create', models.DateTimeField(auto_now_add=True)),
                ('course_id', models.ManyToManyField(to='elearning.course')),
                ('lecture_id', models.ManyToManyField(to='elearning.lecture')),
                ('username', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Assignment_submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(max_length=1000)),
                ('grade', models.CharField(max_length=2)),
                ('assignment_id', models.ManyToManyField(to='elearning.assignment')),
                ('user_id', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='assignment',
            name='course_id',
            field=models.ManyToManyField(to='elearning.course'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='lecture_id',
            field=models.ManyToManyField(to='elearning.lecture'),
        ),
    ]
